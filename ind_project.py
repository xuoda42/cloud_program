from telebot import types

import telebot
from connection import conn, get_elements_as_dict

bot = telebot.TeleBot('—Ç–æ–∫–µ–Ω')


class Gender:
    MALE = ('male', 'üßí')
    FEMALE = ('female', 'üëß')

    ALL_GENDERS = ('male', 'female')


class ColorEye:
    LIGHT_BLUE = ('light_blue_eye', 'üü¶')
    BROWN = ('brown_eye', 'üü´')
    GREEN = ('green_eye', 'üü©')

    ALL_COLORS = ('light_blue_eye', 'brown_eye', 'green_eye', 'gray_eye')


class ColorHair:
    BROWN = ('brown_hair', 'üü´')
    BLONDE = ('blonde_hair', 'üü®')
    RED = ('red_hair', 'üü•')

    ALL_COLORS = ('brown_hair', 'black_hair', 'blonde_hair', 'red_hair')


class PersonData:
    CELEBRITIES = {
        (Gender.MALE[0], ColorHair.BROWN[0], ColorEye.BROWN[0]): '–ú–∞–π–∫–ª –°. –•–æ–ª–ª',
        (Gender.MALE[0], ColorHair.BROWN[0], ColorEye.LIGHT_BLUE[0]): '–û–ª–∏–≤—å–µ –†–∏—Ö—Ç–µ—Ä—Å',
        (Gender.MALE[0], ColorHair.BROWN[0], ColorEye.GREEN[0]): '–°—Ç–µ—Ñ–∞–Ω –†—É—Å—Å–æ',
        (Gender.MALE[0], ColorHair.BLONDE[0], ColorEye.BROWN[0]): '–•–∏—Ç –õ–µ–¥–∂–µ—Ä',
        (Gender.MALE[0], ColorHair.BLONDE[0], ColorEye.LIGHT_BLUE[0]): '–ù–∏–∫–æ–ª–∞–π –ë–∞—Å–∫–æ–≤',
        (Gender.MALE[0], ColorHair.BLONDE[0], ColorEye.GREEN[0]): '–õ—ç–π—Ä–¥ –•—ç–º–∏–ª—Ç–æ–Ω',
        (Gender.MALE[0], ColorHair.RED[0], ColorEye.BROWN[0]): '–ê–Ω–¥—Ä–µ–π –ì—Ä–∏–≥–æ—Ä—å–µ–≤-–ê–ø–ø–æ–ª–æ–Ω–æ–≤',
        (Gender.MALE[0], ColorHair.RED[0], ColorEye.LIGHT_BLUE[0]): '–ë–µ–Ω–µ–¥–∏–∫—Ç –ö–∞–º–±–µ—Ä–±—ç—Ç—á',
        (Gender.MALE[0], ColorHair.RED[0], ColorEye.GREEN[0]): '–†—É–ø–µ—Ä—Ç –ì—Ä–∏–Ω—Ç',
        (Gender.FEMALE[0], ColorHair.BROWN[0], ColorEye.BROWN[0]): '–•–µ–π–ª–∏ –ú–∞–∫—Ñ–∞—Ä–ª–∞–Ω–¥',
        (Gender.FEMALE[0], ColorHair.BROWN[0], ColorEye.LIGHT_BLUE[0]): '–ò–∑–∑–∏ –°—Ç–∏–ª',
        (Gender.FEMALE[0], ColorHair.BROWN[0], ColorEye.GREEN[0]): '–ü–µ–π–¥–∂ –°–ø–∞—Ä–∞',
        (Gender.FEMALE[0], ColorHair.BLONDE[0], ColorEye.BROWN[0]): '–¢–∞–π –õ–æ—É—Å–æ–Ω',
        (Gender.FEMALE[0], ColorHair.BLONDE[0], ColorEye.LIGHT_BLUE[0]): '–ê–ª–∏–Ω–∞ –ö–æ–≤–∞–ª–µ–≤—Å–∫–∞—è',
        (Gender.FEMALE[0], ColorHair.BLONDE[0], ColorEye.GREEN[0]): '–°–æ—Ä–∞–π—è –ê—Ä–Ω–µ–ª–∞—Å',
        (Gender.FEMALE[0], ColorHair.RED[0], ColorEye.BROWN[0]): '–ê–π–ª–∞ –§–∏—à–µ—Ä',
        (Gender.FEMALE[0], ColorHair.RED[0], ColorEye.LIGHT_BLUE[0]): '–ù–∏–∫–æ–ª—å –ö–∏–¥–º–∞–Ω',
        (Gender.FEMALE[0], ColorHair.RED[0], ColorEye.GREEN[0]): '–î–∂–µ—Å—Å–∏–∫–∞ –ß–µ—Å—Ç–µ–π–Ω',
    }

    def __init__(self, gender, color_eye, color_hair):
        self.gender = gender
        self.color_eye = color_eye
        self.color_hair = color_hair

    def get_celebrity(self):
        return self.CELEBRITIES[(self.gender, self.color_hair, self.color_eye)]


@bot.message_handler(content_types=['text'])
def start(message):
    if message.text == '/start':
        cursor = conn.cursor()
        cursor.execute(f'select * from users where chat_id = {message.from_user.id}')
        user_data = get_elements_as_dict(cursor)
        if user_data and user_data[0].get('celebrity_id'):
            cursor.execute(f'select * from users join celebrities on users.celebrity_id = celebrities.id')
            user_data = get_elements_as_dict(cursor)
            message_text = f'–ü–æ –≤–∞—à–∏–º –ø—Ä–æ—à–ª—ã–º –¥–∞–Ω–Ω—ã–º –≤—ã -- {user_data[0]["name"]}.'

            keyboard = types.InlineKeyboardMarkup()
            key_yes = types.InlineKeyboardButton(text='–ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑', callback_data='again')
            keyboard.add(key_yes)

            bot.send_photo(
                message.from_user.id,
                user_data[0]['url_photo'],
                caption=message_text,
                reply_markup=keyboard,
            )
            return

        if not user_data:
            cursor.execute(f'insert into users (chat_id) values ({message.from_user.id})')
            conn.commit()

        message_text = '–ü—Ä–∏—Å—Ç—É–ø–∏–º. –ö–∞–∫–æ–π —É –≤–∞—Å –ø–æ–ª?'

        keyboard = types.InlineKeyboardMarkup()
        key_male = types.InlineKeyboardButton(text=Gender.MALE[1], callback_data=Gender.MALE[0])
        keyboard.add(key_male)
        key_female = types.InlineKeyboardButton(text=Gender.FEMALE[1], callback_data=Gender.FEMALE[0])
        keyboard.add(key_female)

        bot.send_message(message.from_user.id, message_text, reply_markup=keyboard)
    else:
        bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏—Ç–µ /start.')


@bot.callback_query_handler(func=lambda call: call.data in Gender.ALL_GENDERS)
def callback_worker_save_gender(call):
    cursor = conn.cursor()
    cursor.execute(f'update users set gender = \'{call.data}\' where chat_id = {call.from_user.id}')
    conn.commit()
    message_text = '–•–æ—Ä–æ—à–æ. –ö–∞–∫–æ–π —É –≤–∞—Å —Ü–≤–µ—Ç –≤–æ–ª–æ—Å?'
    keyboard = types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    key_brown = types.InlineKeyboardButton(text=ColorHair.BROWN[1], callback_data=ColorHair.BROWN[0])
    keyboard.add(key_brown)
    key_red = types.InlineKeyboardButton(text=ColorHair.RED[1], callback_data=ColorHair.RED[0])
    keyboard.add(key_red)
    key_blonde = types.InlineKeyboardButton(text=ColorHair.BLONDE[1], callback_data=ColorHair.BLONDE[0])
    keyboard.add(key_blonde)
    bot.send_message(call.from_user.id, message_text, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data in ColorHair.ALL_COLORS)
def callback_worker_save_color_hair(call):
    cursor = conn.cursor()
    cursor.execute(f'update users set hair = \'{call.data}\' where chat_id = {call.from_user.id}')
    conn.commit()
    # r_con.hset(REDIS_KEY.format(call.from_user.id), 'hair', call.data)
    keyboard = types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    key_brown = types.InlineKeyboardButton(text=ColorEye.BROWN[1], callback_data=ColorEye.BROWN[0])
    keyboard.add(key_brown)
    key_green = types.InlineKeyboardButton(text=ColorEye.GREEN[1], callback_data=ColorEye.GREEN[0])
    keyboard.add(key_green)
    key_light_blue = types.InlineKeyboardButton(text=ColorEye.LIGHT_BLUE[1], callback_data=ColorEye.LIGHT_BLUE[0])
    keyboard.add(key_light_blue)
    bot.send_message(call.from_user.id, '–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–æ–π —É –≤–∞—Å —Ü–≤–µ—Ç –≥–ª–∞–∑?', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data in ColorEye.ALL_COLORS)
def callback_worker_save_color_eye(call):
    cursor = conn.cursor()
    cursor.execute(f'update users set eye = \'{call.data}\' where chat_id = {call.from_user.id}')
    conn.commit()
    cursor.execute(f'select * from users where chat_id = {call.from_user.id}')
    user_data = get_elements_as_dict(cursor)[0]
    person = PersonData(user_data['gender'], user_data['eye'], user_data['hair'])
    celebrity = person.get_celebrity()
    cursor.execute(f'select * from celebrities where name = \'{celebrity}\'')
    celebrity_data = get_elements_as_dict(cursor)[0]
    cursor.execute(f'update users set celebrity_id = {celebrity_data["id"]} where chat_id = {call.from_user.id}')
    conn.commit()
    message_text = f'–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ü–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –≤—ã -- {celebrity}.'
    keyboard = types.InlineKeyboardMarkup()
    key_yes = types.InlineKeyboardButton(text='–ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑', callback_data='again')
    keyboard.add(key_yes)
    bot.send_photo(
        call.from_user.id,
        celebrity_data['url_photo'],
        caption=message_text,
        reply_markup=keyboard,
    )


@bot.callback_query_handler(func=lambda call: call.data == 'again')
def callback_worker_remove_result(call):
    cursor = conn.cursor()
    try:
        cursor.execute(f'delete from users where chat_id = {call.from_user.id}')
    except Exception:
        bot.send_message(call.from_user.id, '–í—ã —É–∂–µ –æ—á–∏—Å—Ç–∏–ª–∏ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é. –ù–∞–ø–∏—à–∏—Ç–µ /start.')

    conn.commit()
    bot.send_message(call.from_user.id, '–ì–æ—Ç–æ–≤–æ. –ù–∞–ø–∏—à–∏—Ç–µ /start –µ—â—ë —Ä–∞–∑.')


bot.polling(none_stop=True, interval=1)
